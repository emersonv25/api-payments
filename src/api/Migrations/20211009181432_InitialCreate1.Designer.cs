// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211009181432_InitialCreate1")]
    partial class InitialCreate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api.Models.EntityModel.Anticipation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AmountApproved")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("AmountRequest")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RequestAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Anticipation");
                });

            modelBuilder.Entity("api.Models.EntityModel.Installment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("AnticipatedAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime?>("AnticipatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ForecastPaymentAt")
                        .HasColumnType("datetime");

                    b.Property<int>("InstallmentNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("Installments");
                });

            modelBuilder.Entity("api.Models.EntityModel.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Acquirer")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<bool?>("Anticipated")
                        .HasColumnType("bit")
                        .HasColumnName("Antecipado");

                    b.Property<long?>("AnticipationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DisapprovedAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("InstallmentsNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastFourDigitsCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("TransactionAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AnticipationId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("api.Models.EntityModel.Installment", b =>
                {
                    b.HasOne("api.Models.EntityModel.Transaction", null)
                        .WithMany("Installments")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api.Models.EntityModel.Transaction", b =>
                {
                    b.HasOne("api.Models.EntityModel.Anticipation", null)
                        .WithMany("TransactionsList")
                        .HasForeignKey("AnticipationId");
                });

            modelBuilder.Entity("api.Models.EntityModel.Anticipation", b =>
                {
                    b.Navigation("TransactionsList");
                });

            modelBuilder.Entity("api.Models.EntityModel.Transaction", b =>
                {
                    b.Navigation("Installments");
                });
#pragma warning restore 612, 618
        }
    }
}
